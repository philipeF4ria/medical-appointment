{"level":"info","message":"User is being created","timestamp":"27/11/2022 23:40:57"}
{"level":"info","message":"User is being created","timestamp":"27/11/2022 23:40:58"}
{"level":"info","message":"User is being created","timestamp":"27/11/2022 23:46:58"}
{"level":"info","message":"User is being created","timestamp":"27/11/2022 23:47:01"}
{"level":"info","message":"User is being created","timestamp":"27/11/2022 23:48:06"}
{"level":"info","message":"User is being created","timestamp":"27/11/2022 23:48:07"}
{"level":"error","message":"Parameter_Required_Error: Username already exists\n    at CreateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/useCases/create-user/create-user.usecase.ts:24:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/useCases/create-user/create-user.usecase.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","timestamp":"27/11/2022 23:48:07"}
{"level":"info","message":"User is being created","timestamp":"29/11/2022 18:16:29"}
{"level":"info","message":"User is being created","timestamp":"29/11/2022 18:19:51"}
{"level":"info","message":"User is being created","timestamp":"29/11/2022 18:31:28"}
{"level":"error","message":"USER_EXISTS_ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:26:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:5:58)","timestamp":"29/11/2022 18:31:28"}
{"level":"info","message":"User is being created","timestamp":"29/11/2022 18:33:49"}
{"level":"error","message":"USER_EXISTS_ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:26:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:5:58)","timestamp":"29/11/2022 18:33:49"}
{"level":"info","message":"User is being created","timestamp":"29/11/2022 18:56:41"}
{"level":"error","message":"Error: \nInvalid `prismaClient.specialty.create()` invocation in\n/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/specialty/repositories/implementations/specialty.repository.ts:8:56\n\n  5 \n  6 class SpecialtyRepository implements ISpecialtyRepository {\n  7     async save(data: Specialty): Promise<Specialty> {\n→ 8         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at RequestHandler.handleRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34843:13)\n    at RequestHandler.handleAndLogRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34815:12)\n    at RequestHandler.request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34810:12)\n    at async PrismaClient._request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:35900:16)","timestamp":"30/11/2022 11:37:30"}
{"level":"error","message":"Error: \nInvalid `prismaClient.specialty.create()` invocation in\n/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/specialty/repositories/implementations/specialty.repository.ts:8:56\n\n  5 \n  6 class SpecialtyRepository implements ISpecialtyRepository {\n  7     async save(data: Specialty): Promise<Specialty> {\n→ 8         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at RequestHandler.handleRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34843:13)\n    at RequestHandler.handleAndLogRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34815:12)\n    at RequestHandler.request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34810:12)\n    at async PrismaClient._request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:35900:16)","timestamp":"30/11/2022 14:06:14"}
{"level":"error","message":"Error: \nInvalid `prismaClient.specialty.create()` invocation in\n/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/specialty/repositories/implementations/specialty.repository.ts:8:56\n\n  5 \n  6 class SpecialtyRepository implements ISpecialtyRepository {\n  7     async save(data: Specialty): Promise<Specialty> {\n→ 8         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at RequestHandler.handleRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34843:13)\n    at RequestHandler.handleAndLogRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34815:12)\n    at RequestHandler.request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34810:12)\n    at async PrismaClient._request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:35900:16)","timestamp":"30/11/2022 14:08:37"}
{"level":"error","message":"Error: \nInvalid `prismaClient.specialty.create()` invocation in\n/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/specialty/repositories/implementations/specialty.repository.ts:8:56\n\n  5 \n  6 class SpecialtyRepository implements ISpecialtyRepository {\n  7     async save(data: Specialty): Promise<Specialty> {\n→ 8         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at RequestHandler.handleRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34843:13)\n    at RequestHandler.handleAndLogRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34815:12)\n    at RequestHandler.request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34810:12)\n    at async PrismaClient._request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:35900:16)","timestamp":"30/11/2022 14:08:42"}
{"level":"error","message":"Error: \nInvalid `prismaClient.specialty.create()` invocation in\n/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/specialty/repositories/implementations/specialty.repository.ts:8:56\n\n  5 \n  6 class SpecialtyRepository implements ISpecialtyRepository {\n  7     async save(data: Specialty): Promise<Specialty> {\n→ 8         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at RequestHandler.handleRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34843:13)\n    at RequestHandler.handleAndLogRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34815:12)\n    at RequestHandler.request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34810:12)\n    at async PrismaClient._request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:35900:16)","timestamp":"30/11/2022 14:12:33"}
{"level":"error","message":"Specialty already exists\n    at CreateSpecialtyUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/specialty/useCases/createSpecialty/create-specialty.usecase.ts:17:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/specialty/useCases/createSpecialty/create-specialty.usecase.ts:5:58)","timestamp":"30/11/2022 14:21:27"}
{"level":"info","message":"User is being authenticated","timestamp":"30/11/2022 15:57:34"}
{"level":"info","message":"User is being authenticated","timestamp":"30/11/2022 16:00:49"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:19:19)\n    at Generator.next (<anonymous>)\n    at /Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:4:12)\n    at AuthenticateUserUseCase.execute (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:20:16)\n    at AuthenticateUserController.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.controller.ts:23:42)\n    at Generator.next (<anonymous>)\n    at /Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.controller.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"30/11/2022 16:00:49"}
{"level":"info","message":"User is being authenticated","timestamp":"30/11/2022 16:00:58"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:25:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"30/11/2022 16:00:58"}
{"level":"info","message":"User is being authenticated","timestamp":"30/11/2022 16:01:05"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:31:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"30/11/2022 16:01:05"}
{"level":"info","message":"User is being authenticated","timestamp":"30/11/2022 16:01:09"}
{"level":"info","message":"User is being authenticated","timestamp":"30/11/2022 16:54:14"}
{"level":"info","message":"User is being authenticated","timestamp":"30/11/2022 18:26:54"}
{"level":"info","message":"User is being authenticated","timestamp":"30/11/2022 18:51:35"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:33:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"30/11/2022 18:51:35"}
{"level":"info","message":"User is being authenticated","timestamp":"30/11/2022 18:52:20"}
{"level":"info","message":"User is being authenticated","timestamp":"30/11/2022 19:02:19"}
{"level":"info","message":"User is being authenticated","timestamp":"01/12/2022 18:40:47"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findUnique()` invocation in\n/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/repositories/implementations/user.prisma.repository.ts:7:46\n\n  4 \n  5 class UserPrismaRepository implements IUserRepository {\n  6     async findByUsername(username: string): Promise<User | undefined> {\n→ 7         const user = await prismaClient.user.findUnique(\nCan't reach database server at `localhost`:`5432`\n\nPlease make sure your database server is running at `localhost`:`5432`.\n    at RequestHandler.handleRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34857:13)\n    at RequestHandler.handleAndLogRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34815:12)\n    at RequestHandler.request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34810:12)\n    at async PrismaClient._request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:35900:16)","timestamp":"01/12/2022 18:40:47"}
{"level":"info","message":"User is being authenticated","timestamp":"01/12/2022 18:43:08"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findUnique()` invocation in\n/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/repositories/implementations/user.prisma.repository.ts:7:46\n\n  4 \n  5 class UserPrismaRepository implements IUserRepository {\n  6     async findByUsername(username: string): Promise<User | undefined> {\n→ 7         const user = await prismaClient.user.findUnique(\nCan't reach database server at `localhost`:`5432`\n\nPlease make sure your database server is running at `localhost`:`5432`.\n    at RequestHandler.handleRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34857:13)\n    at RequestHandler.handleAndLogRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34815:12)\n    at RequestHandler.request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34810:12)\n    at async PrismaClient._request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:35900:16)","timestamp":"01/12/2022 18:43:08"}
{"level":"info","message":"User is being authenticated","timestamp":"01/12/2022 18:44:48"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findUnique()` invocation in\n/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/repositories/implementations/user.prisma.repository.ts:7:46\n\n  4 \n  5 class UserPrismaRepository implements IUserRepository {\n  6     async findByUsername(username: string): Promise<User | undefined> {\n→ 7         const user = await prismaClient.user.findUnique(\nCan't reach database server at `localhost`:`5432`\n\nPlease make sure your database server is running at `localhost`:`5432`.\n    at RequestHandler.handleRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34857:13)\n    at RequestHandler.handleAndLogRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34815:12)\n    at RequestHandler.request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34810:12)\n    at async PrismaClient._request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:35900:16)","timestamp":"01/12/2022 18:44:49"}
{"level":"info","message":"User is being authenticated","timestamp":"01/12/2022 18:46:54"}
{"level":"info","message":"User is being authenticated","timestamp":"07/12/2022 21:18:23"}
{"level":"info","message":"User is being authenticated","timestamp":"07/12/2022 21:31:36"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:33:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"07/12/2022 21:31:36"}
{"level":"info","message":"User is being authenticated","timestamp":"07/12/2022 21:31:57"}
{"level":"info","message":"User is being authenticated","timestamp":"07/12/2022 21:42:16"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:27:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"07/12/2022 21:42:16"}
{"level":"info","message":"User is being authenticated","timestamp":"07/12/2022 21:51:00"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:33:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"07/12/2022 21:51:00"}
{"level":"info","message":"User is being authenticated","timestamp":"07/12/2022 21:51:25"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:33:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"07/12/2022 21:51:25"}
{"level":"info","message":"User is being authenticated","timestamp":"07/12/2022 21:54:29"}
{"level":"info","message":"User is being authenticated","timestamp":"07/12/2022 21:54:57"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:33:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"07/12/2022 21:54:57"}
{"level":"info","message":"User is being authenticated","timestamp":"08/12/2022 13:58:30"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:35:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"08/12/2022 13:58:30"}
{"level":"info","message":"User is being authenticated","timestamp":"08/12/2022 13:59:06"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:36:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"08/12/2022 13:59:06"}
{"level":"info","message":"User is being authenticated","timestamp":"08/12/2022 13:59:51"}
{"level":"info","message":"User is being authenticated","timestamp":"08/12/2022 14:00:12"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:36:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"08/12/2022 14:00:12"}
{"level":"info","message":"User is being authenticated","timestamp":"08/12/2022 14:03:34"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:36:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"08/12/2022 14:03:34"}
{"level":"info","message":"User is being authenticated","timestamp":"08/12/2022 14:04:41"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:36:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"08/12/2022 14:04:41"}
{"level":"info","message":"User is being authenticated","timestamp":"08/12/2022 14:05:47"}
{"level":"error","message":"Username/password incorrect - senha incorreta\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:36:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"08/12/2022 14:05:47"}
{"level":"info","message":"User is being created","timestamp":"08/12/2022 14:08:38"}
{"level":"info","message":"User is being authenticated","timestamp":"08/12/2022 14:08:51"}
{"level":"info","message":"User is being authenticated","timestamp":"08/12/2022 14:11:51"}
{"level":"info","message":"User is being authenticated","timestamp":"08/12/2022 14:15:55"}
{"level":"info","message":"User is being authenticated","timestamp":"08/12/2022 14:24:37"}
{"level":"info","message":"User is being authenticated","timestamp":"22/12/2022 19:59:17"}
{"level":"info","message":"User is being authenticated","timestamp":"22/12/2022 20:10:58"}
