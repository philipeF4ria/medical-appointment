{"level":"error","message":"Parameter_Required_Error: Username already exists\n    at CreateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/useCases/create-user/create-user.usecase.ts:24:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/useCases/create-user/create-user.usecase.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","timestamp":"27/11/2022 23:40:58"}
{"level":"error","message":"Parameter_Required_Error: Username already exists\n    at CreateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/useCases/create-user/create-user.usecase.ts:24:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/useCases/create-user/create-user.usecase.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","timestamp":"27/11/2022 23:47:01"}
{"level":"error","message":"Parameter_Required_Error: Username already exists\n    at CreateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/useCases/create-user/create-user.usecase.ts:24:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/useCases/create-user/create-user.usecase.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)","timestamp":"27/11/2022 23:48:07"}
{"level":"error","message":"TypeError: Cannot read properties of undefined (reading 'userRepository')\n    at /Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:16:56\n    at Generator.next (<anonymous>)\n    at /Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:4:12)\n    at handle (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/create-user/create-user.controller.ts:20:16)\n    at Layer.handle [as handle_request] (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/express/lib/router/route.js:144:13)\n    at Route.dispatch (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/express/lib/router/route.js:114:3)\n    at Layer.handle [as handle_request] (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/express/lib/router/layer.js:95:5)","timestamp":"29/11/2022 18:16:29"}
{"level":"error","message":"USER_EXISTS_ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:26:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:5:58)","timestamp":"29/11/2022 18:31:28"}
{"level":"error","message":"USER_EXISTS_ERROR: Username already exists\n    at CreateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:26:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/create-user/create-user.usecase.ts:5:58)","timestamp":"29/11/2022 18:33:49"}
{"level":"error","message":"Error: \nInvalid `prismaClient.specialty.create()` invocation in\n/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/specialty/repositories/implementations/specialty.repository.ts:8:56\n\n  5 \n  6 class SpecialtyRepository implements ISpecialtyRepository {\n  7     async save(data: Specialty): Promise<Specialty> {\n→ 8         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at RequestHandler.handleRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34843:13)\n    at RequestHandler.handleAndLogRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34815:12)\n    at RequestHandler.request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34810:12)\n    at async PrismaClient._request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:35900:16)","timestamp":"30/11/2022 11:37:30"}
{"level":"error","message":"Error: \nInvalid `prismaClient.specialty.create()` invocation in\n/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/specialty/repositories/implementations/specialty.repository.ts:8:56\n\n  5 \n  6 class SpecialtyRepository implements ISpecialtyRepository {\n  7     async save(data: Specialty): Promise<Specialty> {\n→ 8         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at RequestHandler.handleRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34843:13)\n    at RequestHandler.handleAndLogRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34815:12)\n    at RequestHandler.request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34810:12)\n    at async PrismaClient._request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:35900:16)","timestamp":"30/11/2022 14:06:14"}
{"level":"error","message":"Error: \nInvalid `prismaClient.specialty.create()` invocation in\n/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/specialty/repositories/implementations/specialty.repository.ts:8:56\n\n  5 \n  6 class SpecialtyRepository implements ISpecialtyRepository {\n  7     async save(data: Specialty): Promise<Specialty> {\n→ 8         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at RequestHandler.handleRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34843:13)\n    at RequestHandler.handleAndLogRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34815:12)\n    at RequestHandler.request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34810:12)\n    at async PrismaClient._request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:35900:16)","timestamp":"30/11/2022 14:08:37"}
{"level":"error","message":"Error: \nInvalid `prismaClient.specialty.create()` invocation in\n/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/specialty/repositories/implementations/specialty.repository.ts:8:56\n\n  5 \n  6 class SpecialtyRepository implements ISpecialtyRepository {\n  7     async save(data: Specialty): Promise<Specialty> {\n→ 8         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at RequestHandler.handleRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34843:13)\n    at RequestHandler.handleAndLogRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34815:12)\n    at RequestHandler.request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34810:12)\n    at async PrismaClient._request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:35900:16)","timestamp":"30/11/2022 14:08:42"}
{"level":"error","message":"Error: \nInvalid `prismaClient.specialty.create()` invocation in\n/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/specialty/repositories/implementations/specialty.repository.ts:8:56\n\n  5 \n  6 class SpecialtyRepository implements ISpecialtyRepository {\n  7     async save(data: Specialty): Promise<Specialty> {\n→ 8         const specialty = await prismaClient.specialty.create(\nUnique constraint failed on the fields: (`name`)\n    at RequestHandler.handleRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34843:13)\n    at RequestHandler.handleAndLogRequestError (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34815:12)\n    at RequestHandler.request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:34810:12)\n    at async PrismaClient._request (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/node_modules/@prisma/client/runtime/index.js:35900:16)","timestamp":"30/11/2022 14:12:33"}
{"level":"error","message":"Specialty already exists\n    at CreateSpecialtyUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/specialty/useCases/createSpecialty/create-specialty.usecase.ts:17:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/specialty/useCases/createSpecialty/create-specialty.usecase.ts:5:58)","timestamp":"30/11/2022 14:21:27"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:19:19)\n    at Generator.next (<anonymous>)\n    at /Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:4:12)\n    at AuthenticateUserUseCase.execute (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:20:16)\n    at AuthenticateUserController.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.controller.ts:23:42)\n    at Generator.next (<anonymous>)\n    at /Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.controller.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"30/11/2022 16:00:49"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:25:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"30/11/2022 16:00:58"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:31:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"30/11/2022 16:01:05"}
{"level":"error","message":"Username/password incorrect\n    at AuthenticateUserUseCase.<anonymous> (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:33:19)\n    at Generator.next (<anonymous>)\n    at fulfilled (/Users/philipefaria/Desktop/Cursos/NodeJSDL/medical_appointment/src/modules/users/useCases/authenticate-user/authenticate-user.usecase.ts:5:58)","timestamp":"30/11/2022 18:51:35"}
